% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search-grants.R
\name{tsg_search_grants}
\alias{tsg_search_grants}
\title{Search for specific datasets}
\usage{
tsg_search_grants(search, search_in = NULL, verbose = TRUE,
  ignore_case = TRUE, perl = FALSE, fixed = FALSE, ...)
}
\arguments{
\item{search}{The string(s) to search for. By default allows POSIX 1003.2
regular expressions. Use `perl = TRUE` for perl-style regex, or
`fixed = TRUE` for fixed strings.
Accepts single strings or a character vector of strings.}

\item{search_in}{The name of the column to search in. Accepts single strings
or a character vector of column names. If `NULL`, searches all columns.}

\item{verbose}{If `TRUE`, prints console messages.}

\item{ignore_case}{If `TRUE` ignores case.}

\item{perl}{If `TRUE`, uses perl-style regex.}

\item{fixed}{If `TRUE`, searches will be matched as-is.}

\item{...}{Additional params passed to [tsg_data_retrieval()]}
}
\value{
A single tibble (if only one grant maker matches the queries) or a
list of tibbles (if the query matches multiple datasets).
}
\description{
Returns a list of tibbles with details of all grants from specific funders.
}
\details{
`tsg_specific_data_search` retrieves grants where funder data
matches one or more search strings. If only one dataset
matches queries, returns a tibble of that dataset.
Use [tsg_specific_df()] to pass a dataframe.
}
\examples{
\donttest{
specific1 <- tsg_search_grants(search = c("bbc", "caBinet"))
}

}
\seealso{
tsg_specific_df
}
